// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String       @id
  dni               String?      @unique
  name              String?
  surname           String?
  birthDate         String?
  registerDate      String?
  address           String?
  email             String       @unique
  hashedPassword    String
  phone             String?
  relativeName      String?
  relativePhone     String?
  role              String?
  type              String?
  picture           String?
  departmentId      String?
  UserToZone        UserToZone[] 
  UserToZoneAllowed UserToZone[] @relation("AllowedByUser")
  Department        Department?  @relation(fields: [departmentId], references: [id], onDelete: SetNull )
  updatedAt         DateTime     @updatedAt
  createdAt         DateTime     @default(now())
  AccessLog         AccessLog[]
}

model Zone {
  id          String       @id
  name        String
  location    String
  description String
  UserToZone  UserToZone[] 
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
  AccessLog   AccessLog[]
}

model UserToZone {
  id            String   @id
  userId        String
  zoneId        String
  allowedBy     String
  AllowedByUser User     @relation("AllowedByUser", fields: [allowedBy], references: [id], onDelete: Cascade, onUpdate: Cascade)
  User          User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Zone          Zone     @relation(fields: [zoneId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())
}

model Department {
  id          String   @id
  name        String
  description String
  User        User[]
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}

model AccessLog {
  id        String   @id
  userId    String
  zoneId    String
  access    Boolean
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Zone      Zone     @relation(fields: [zoneId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
